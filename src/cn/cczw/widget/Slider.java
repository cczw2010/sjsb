package cn.cczw.widget;import java.util.ArrayList;import android.content.Context;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.graphics.Color;import android.view.Gravity;import android.view.View;import android.view.ViewGroup;import android.view.ViewGroup.LayoutParams;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.AdapterView.OnItemSelectedListener;import android.widget.BaseAdapter;import android.widget.Gallery;import android.widget.ImageView;import android.widget.ImageView.ScaleType;import android.widget.LinearLayout;import android.widget.RelativeLayout;import android.widget.TextView;/** * 幻灯片类 * @author awen * */public  class Slider{	private Context context=null;	private Gallery gallery=null;	private ArrayList<Bitmap> imglist=null;	private ArrayList<String> titles=null;	private SliderListener listener=null;	private TextView titlebar=null;	private RelativeLayout container=null; 	  	public Slider(final Context context,LinearLayout parentlayout){		this.context=context;	   		RelativeLayout rl=new RelativeLayout(context); 		rl.setGravity(Gravity.BOTTOM);		container=rl;		    		//滚动墙 		gallery=new Gallery(context);		gallery.setLayoutParams(new Gallery.LayoutParams(LayoutParams.MATCH_PARENT,LayoutParams.MATCH_PARENT)); 		gallery.setSpacing(0);		gallery.setOnItemClickListener(new OnItemClickListener() { 			@Override			public void onItemClick(AdapterView<?> arg0, View view, int pos,					long arg3) { 				if(listener!=null){ 					listener.onItemClick((ImageView) view, pos); 				}			}		});		gallery.setOnItemSelectedListener(new OnItemSelectedListener() {			@Override			public void onItemSelected(AdapterView<?> arg0, View view,					int pos, long arg3) { 				if(listener!=null){ 					 					listener.onItemSelected((ImageView) view, pos); 				} 				if(titlebar!=null&&titles!=null){ 					if(pos<titles.size()){ 						titlebar.setText(titles.get(pos)); 					} 				}			}			@Override			public void onNothingSelected(AdapterView<?> arg0) {				}		});				container.addView(gallery);		parentlayout.addView(container); 	}	public void setImagesBitmap(ArrayList<Bitmap> lis){		imglist=lis;		gallery.setAdapter(new ImageAdpater());   	}	public void setImagesResource(ArrayList<Integer> lis){		imglist=new ArrayList<Bitmap>();		for(int i=0,len=lis.size();i<len;i++){ 			imglist.add(BitmapFactory.decodeResource(context.getResources(), lis.get(i)));		}		gallery.setAdapter(new ImageAdpater());  	}	public void setTitleBar(ArrayList<String> lis,int height,float textsize){		titles=new ArrayList<String>(lis);	   		titlebar=new TextView(context); 		titlebar.setBackgroundColor(Color.GRAY);		titlebar.getBackground().setAlpha(100);		//0~255		titlebar.setGravity(Gravity.CENTER);		titlebar.setTextColor(Color.WHITE);		titlebar.setTextSize(textsize);		RelativeLayout.LayoutParams lp = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, height);		lp.addRule(RelativeLayout.ALIGN_PARENT_BOTTOM);        container.addView(titlebar,lp);	}		public void setListener(SliderListener listener){		this.listener=listener;	}			public void scollNext(){				int idx=(int) gallery.getSelectedItemId();		idx=idx>=imglist.size()-1?0:idx+1;  		gallery.setSelection(idx, true); 		//gallery.scrollTo(idx*width, 0); 	}				private class ImageAdpater extends BaseAdapter{		@Override		public View getView(int position, View arg1, ViewGroup arg2) {			ImageView i = new ImageView(context);			i.setImageBitmap(imglist.get(position));				i.setAdjustViewBounds(true);			i.setLayoutParams(new Gallery.LayoutParams(					LayoutParams.MATCH_PARENT,LayoutParams.MATCH_PARENT));			i.setBackgroundResource(android.R.color.background_dark);			i.setScaleType(ScaleType.FIT_XY);				return i;		}				@Override		public long getItemId(int pos) {				return pos;		}				@Override		public Object getItem(int pos) {				return imglist.get(pos);		}				@Override		public int getCount() {				return imglist.size();		} 	}	 	/**slider的监听回调类*/	public interface SliderListener{		public void onItemSelected(ImageView view,int pos);		public void onItemClick(ImageView view,int pos);	}}